#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Tue May 20 12:48:30 2014

import wx
import wx.grid

# begin wxGlade: extracode
# end wxGlade



class UdpConfigInterface(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: UdpConfigInterface.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.gridUdpPorts = wx.grid.Grid(self, -1, size=(1, 1))
        self.btnAddPort = wx.Button(self, -1, u"Добавить")
        self.btnRemovePort = wx.Button(self, -1, u"Удалить")
        self.btnSave = wx.Button(self, -1, u"Сохранить")
        self.btnCancel = wx.Button(self, -1, u"Отменить")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.grid.EVT_GRID_CMD_CELL_CHANGE, self.gridUdpPorts_on_cell_changed, self.gridUdpPorts)
        self.Bind(wx.EVT_BUTTON, self.btnAddPort_on_click, self.btnAddPort)
        self.Bind(wx.EVT_BUTTON, self.btnRemovePort_on_click, self.btnRemovePort)
        self.Bind(wx.EVT_BUTTON, self.btnSave_on_click, self.btnSave)
        self.Bind(wx.EVT_BUTTON, self.btnCancel_on_click, self.btnCancel)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: UdpConfigInterface.__set_properties
        self.SetTitle(u"Настройки приема сообщений UDP")
        self.gridUdpPorts.CreateGrid(1, 4)
        self.gridUdpPorts.SetSelectionMode(wx.grid.Grid.wxGridSelectRows)
        self.gridUdpPorts.SetColLabelValue(0, u"Порт")
        self.gridUdpPorts.SetColLabelValue(1, u"Тип данных")
        self.gridUdpPorts.SetColSize(1, 150)
        self.gridUdpPorts.SetColLabelValue(2, u"Описание данных")
        self.gridUdpPorts.SetColSize(2, 200)
        self.gridUdpPorts.SetColLabelValue(3, u"Название тикета")
        self.gridUdpPorts.SetColSize(3, 200)
        self.gridUdpPorts.SetMinSize((500, 500))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: UdpConfigInterface.__do_layout
        sizer_1 = wx.FlexGridSizer(2, 1, 0, 0)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(self.gridUdpPorts, 1, wx.EXPAND, 0)
        sizer_2.Add(self.btnAddPort, 0, wx.EXPAND, 0)
        sizer_2.Add(self.btnRemovePort, 0, wx.EXPAND, 0)
        sizer_2.Add(self.btnSave, 0, wx.EXPAND, 0)
        sizer_2.Add(self.btnCancel, 0, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.AddGrowableRow(0)
        sizer_1.AddGrowableCol(0)
        self.Layout()
        # end wxGlade

    def btnAddPort_on_click(self, event): # wxGlade: UdpConfigInterface.<event_handler>
        print "Event handler `btnAddPort_on_click' not implemented!"
        event.Skip()

    def btnRemovePort_on_click(self, event): # wxGlade: UdpConfigInterface.<event_handler>
        print "Event handler `btnRemovePort_on_click' not implemented!"
        event.Skip()

    def btnSave_on_click(self, event): # wxGlade: UdpConfigInterface.<event_handler>
        print "Event handler `btnSave_on_click' not implemented!"
        event.Skip()

    def btnCancel_on_click(self, event): # wxGlade: UdpConfigInterface.<event_handler>
        print "Event handler `btnCancel_on_click' not implemented!"
        event.Skip()

    def gridUdpPorts_on_cell_changed(self, event): # wxGlade: UdpConfigInterface.<event_handler>
        print "Event handler `gridUdpPorts_on_cell_changed' not implemented"
        event.Skip()

# end of class UdpConfigInterface


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    udp_cfg = UdpConfigInterface(None, -1, "")
    app.SetTopWindow(udp_cfg)
    udp_cfg.Show()
    app.MainLoop()
